 import tensorflow as tf
 from tensorflow.keras.datasets import fashion_mnist
 from tensorflow.keras.models import Sequential
 from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
 from tensorflow.keras.utils import to_categorical
 import numpy as np

 (train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

 # Normalize pixel values to the range [0, 1]
 train_images = train_images.astype('float32') / 255.0
 test_images = test_images.astype('float32') / 255.0
 # Convert labels to one-hot encoding
 train_labels = to_categorical(train_labels)
 test_labels = to_categorical(test_labels)
 # Create CNN model
 model = Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),
    MaxPooling2D((2, 2)),
    
    Conv2D(64, (3, 3), activation='relu'),
    MaxPooling2D((2, 2)),
    
    Conv2D(128, (3, 3), activation='relu'),
    MaxPooling2D((2, 2)),
    
    Flatten(),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')  # 10 classes for fashion items
 ])


# Compile the model
 model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

 # Train the model
 history = model.fit(
 train_images,
 train_labels,
 epochs=10,
 batch_size=128,
 validation_data=(test_images, test_labels)
 )

results = model.evaluate(test_images, test_labels)

results
